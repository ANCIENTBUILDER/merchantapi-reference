openapi: 3.0.1
info:
  title: Merchant API Admin
  version: 1.4.0
paths:
  /api/v1/FeeQuote/{id}:
    get:
      tags:
        - FeeQuote
      summary: Get selected policy quote.
      parameters:
        - name: id
          in: path
          description: Id of the selected policy quote.
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/FeeQuoteConfigViewModelGet'
            application/json:
              schema:
                $ref: '#/components/schemas/FeeQuoteConfigViewModelGet'
            text/json:
              schema:
                $ref: '#/components/schemas/FeeQuoteConfigViewModelGet'
  /api/v1/FeeQuote:
    get:
      tags:
        - FeeQuote
      summary: Get general list of policy quotes or policy quotes for given identity.
      parameters:
        - name: identity
          in: query
          description: Identity identifier.
          schema:
            type: string
        - name: identityProvider
          in: query
          description: Identity provider.
          schema:
            type: string
        - name: anonymous
          in: query
          description: Return only policy quotes for anonymous user.
          schema:
            type: boolean
        - name: current
          in: query
          description: Return only valid policy quotes.
          schema:
            type: boolean
        - name: valid
          in: query
          description: Return valid policy quotes in interval with QuoteExpiryMinutes.
          schema:
            type: boolean
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/FeeQuoteConfigViewModelGet'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/FeeQuoteConfigViewModelGet'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/FeeQuoteConfigViewModelGet'
    post:
      tags:
        - FeeQuote
      summary: Create new policy quote.
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FeeQuoteViewModelCreate'
          text/json:
            schema:
              $ref: '#/components/schemas/FeeQuoteViewModelCreate'
          application/*+json:
            schema:
              $ref: '#/components/schemas/FeeQuoteViewModelCreate'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/FeeQuoteConfigViewModelGet'
            application/json:
              schema:
                $ref: '#/components/schemas/FeeQuoteConfigViewModelGet'
            text/json:
              schema:
                $ref: '#/components/schemas/FeeQuoteConfigViewModelGet'
  /api/v1/Node:
    post:
      tags:
        - Node
      summary: Register a new node with merchant api.
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NodeViewModelCreate'
          text/json:
            schema:
              $ref: '#/components/schemas/NodeViewModelCreate'
          application/*+json:
            schema:
              $ref: '#/components/schemas/NodeViewModelCreate'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/NodeViewModelGet'
            application/json:
              schema:
                $ref: '#/components/schemas/NodeViewModelGet'
            text/json:
              schema:
                $ref: '#/components/schemas/NodeViewModelGet'
    get:
      tags:
        - Node
      summary: Get list of all nodes.
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/NodeViewModelGet'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/NodeViewModelGet'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/NodeViewModelGet'
  /api/v1/Node/{id}:
    put:
      tags:
        - Node
      summary: Update selected node information.
      parameters:
        - name: id
          in: path
          description: Id of the selected node.
          required: true
          schema:
            type: string
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NodeViewModelPut'
          text/json:
            schema:
              $ref: '#/components/schemas/NodeViewModelPut'
          application/*+json:
            schema:
              $ref: '#/components/schemas/NodeViewModelPut'
      responses:
        '200':
          description: Success
    delete:
      tags:
        - Node
      summary: Delete selected node.
      parameters:
        - name: id
          in: path
          description: Id of the selected node.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
    get:
      tags:
        - Node
      summary: Get selected node details.
      parameters:
        - name: id
          in: path
          description: Id of the selected node.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/NodeViewModelGet'
            application/json:
              schema:
                $ref: '#/components/schemas/NodeViewModelGet'
            text/json:
              schema:
                $ref: '#/components/schemas/NodeViewModelGet'
  /api/v1/PolicyQuote/{id}:
    get:
      tags:
        - PolicyQuote
      summary: Get selected policy quote.
      parameters:
        - name: id
          in: path
          description: Id of the selected policy quote.
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/FeeQuoteConfigViewModelGet'
            application/json:
              schema:
                $ref: '#/components/schemas/FeeQuoteConfigViewModelGet'
            text/json:
              schema:
                $ref: '#/components/schemas/FeeQuoteConfigViewModelGet'
  /api/v1/PolicyQuote:
    get:
      tags:
        - PolicyQuote
      summary: Get general list of policy quotes or policy quotes for given identity.
      parameters:
        - name: identity
          in: query
          description: Identity identifier.
          schema:
            type: string
        - name: identityProvider
          in: query
          description: Identity provider.
          schema:
            type: string
        - name: anonymous
          in: query
          description: Return only policy quotes for anonymous user.
          schema:
            type: boolean
        - name: current
          in: query
          description: Return only valid policy quotes.
          schema:
            type: boolean
        - name: valid
          in: query
          description: Return valid policy quotes in interval with QuoteExpiryMinutes.
          schema:
            type: boolean
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/FeeQuoteConfigViewModelGet'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/FeeQuoteConfigViewModelGet'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/FeeQuoteConfigViewModelGet'
    post:
      tags:
        - PolicyQuote
      summary: Create new policy quote.
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FeeQuoteViewModelCreate'
          text/json:
            schema:
              $ref: '#/components/schemas/FeeQuoteViewModelCreate'
          application/*+json:
            schema:
              $ref: '#/components/schemas/FeeQuoteViewModelCreate'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/FeeQuoteConfigViewModelGet'
            application/json:
              schema:
                $ref: '#/components/schemas/FeeQuoteConfigViewModelGet'
            text/json:
              schema:
                $ref: '#/components/schemas/FeeQuoteConfigViewModelGet'
  /api/v1/Status/zmq:
    get:
      tags:
        - Status
      summary: Get zmq subscriptions status
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ZmqStatusViewModelGet'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ZmqStatusViewModelGet'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ZmqStatusViewModelGet'
components:
  schemas:
    FeeAmountViewModelCreate:
      type: object
      properties:
        satoshis:
          type: integer
          format: int32
        bytes:
          type: integer
          format: int32
      additionalProperties: false
    FeeAmountViewModelGet:
      type: object
      properties:
        satoshis:
          type: integer
          format: int32
        bytes:
          type: integer
          format: int32
      additionalProperties: false
    FeeQuoteConfigViewModelGet:
      type: object
      properties:
        id:
          type: integer
          format: int64
        createdAt:
          type: string
          format: date-time
        validFrom:
          type: string
          format: date-time
          nullable: true
        identity:
          type: string
          nullable: true
        identityProvider:
          type: string
          nullable: true
        policies:
          type: object
          additionalProperties: {}
          nullable: true
        fees:
          type: array
          items:
            $ref: '#/components/schemas/FeeViewModelGet'
          nullable: true
      additionalProperties: false
    FeeQuoteViewModelCreate:
      type: object
      properties:
        validFrom:
          type: string
          format: date-time
          nullable: true
        identity:
          type: string
          nullable: true
        identityProvider:
          type: string
          nullable: true
        policies:
          type: object
          additionalProperties: {}
          nullable: true
        fees:
          type: array
          items:
            $ref: '#/components/schemas/FeeViewModelCreate'
          nullable: true
      additionalProperties: false
    FeeViewModelCreate:
      type: object
      properties:
        feeType:
          type: string
          nullable: true
        miningFee:
          $ref: '#/components/schemas/FeeAmountViewModelCreate'
        relayFee:
          $ref: '#/components/schemas/FeeAmountViewModelCreate'
      additionalProperties: false
    FeeViewModelGet:
      type: object
      properties:
        feeType:
          type: string
          nullable: true
        miningFee:
          $ref: '#/components/schemas/FeeAmountViewModelGet'
        relayFee:
          $ref: '#/components/schemas/FeeAmountViewModelGet'
      additionalProperties: false
    NodeStatus:
      enum:
        - 600
        - 601
      type: integer
      format: int32
    NodeViewModelCreate:
      required:
        - id
        - password
        - username
      type: object
      properties:
        id:
          type: string
        username:
          type: string
        password:
          type: string
        remarks:
          type: string
          nullable: true
        zmqNotificationsEndpoint:
          type: string
          nullable: true
      additionalProperties: false
    NodeViewModelGet:
      type: object
      properties:
        id:
          type: string
          nullable: true
        username:
          type: string
          nullable: true
        remarks:
          type: string
          nullable: true
        status:
          $ref: '#/components/schemas/NodeStatus'
        lastError:
          type: string
          nullable: true
        lastErrorAt:
          type: string
          format: date-time
          nullable: true
        zmqNotificationsEndpoint:
          type: string
          nullable: true
      additionalProperties: false
    NodeViewModelPut:
      required:
        - password
        - username
      type: object
      properties:
        username:
          type: string
        password:
          type: string
        remarks:
          type: string
          nullable: true
        zmqNotificationsEndpoint:
          type: string
          nullable: true
      additionalProperties: false
    ZmqEndpointViewModelGet:
      type: object
      properties:
        address:
          type: string
          nullable: true
        topic:
          type: array
          items:
            type: string
          nullable: true
        lastPingAt:
          type: string
          format: date-time
        lastMessageAt:
          type: string
          format: date-time
          nullable: true
      additionalProperties: false
    ZmqStatusViewModelGet:
      type: object
      properties:
        nodeId:
          type: string
          nullable: true
        endpoints:
          type: array
          items:
            $ref: '#/components/schemas/ZmqEndpointViewModelGet'
          nullable: true
        isResponding:
          type: boolean
        lastConnectionAttemptAt:
          type: string
          format: date-time
          nullable: true
        lastError:
          type: string
          nullable: true
      additionalProperties: false
  securitySchemes:
    Bearer:
      type: apiKey
      description: >-
        Please enter JWT with Bearer needed to access MAPI into field.
        Authorization: Bearer JWT
      name: Authorization
      in: header
    Api-Key:
      type: apiKey
      description: >-
        Please enter API key needed to access admin endpoints into field.
        Api-Key: My_API_Key
      name: Api-Key
      in: header
security:
  - Bearer: []
  - Api-Key: []
